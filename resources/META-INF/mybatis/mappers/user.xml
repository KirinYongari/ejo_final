<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.jhta.dao.UserDao">

	<select id="getUserCount" resultType="int">
		select
			count(*)
		from
			users
	</select>

	<select id="getTotalUserRows" parameterType="Criteria" resultType="int">
		select
			count(*)
		from
			users
		<where>
			<if test="opt != null">
				<choose>
					<when test="opt == 'nickname'">
						user_nickname like '%' || #{keyword} || '%'
					</when>
					<when test="opt == 'name'">
						user_id = #{keyword}
					</when>
					<when test="opt == 'id'">
						user_id = #{keyword}
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<select id="getUsers" parameterType="Criteria" resultType="User">
		select
			user_no				as no,
			user_id				as id,
			user_password		as password,
			user_name			as name,
			user_gender			as gender,
			user_birthday		as birthday,
			user_nickname		as nickname,
			user_available		as available,
			user_grade			as grade,
			user_create_date	as createDate,
			theme_no			as themeNo,
			user_last_access_date	as lastAccessDate
		from (select
				A.*,
				row_number() over (order by user_no desc) rn
			from
				users A
			<where>
				<if test="opt != null">
					<choose>
						<when test="opt == 'nickname'">
							user_nickname like '%' || #{keyword} || '%'
						</when>
						<when test="opt == 'name'">
							user_id = #{keyword}
						</when>
						<when test="opt == 'id'">
							user_id = #{keyword}
						</when>
					</choose>
				</if>
			</where>)
		where
			rn >= #{beginIndex} and rn &lt;= #{endIndex}
	</select>
	
	<select id="getUserById" parameterType="String" resultType="User">
		select 
			user_no				as no,
			user_id				as id,
			user_password		as password,
			user_name			as name,
			user_gender			as gender,
			user_birthday		as birthday,
			user_nickname		as nickname,
			user_available		as available,
			user_grade			as grade,
			user_create_date	as createDate,
			theme_no			as themeNo,
			user_last_access_date	as lastAccessDate
		from
			users
		where
			user_id = #{value}
	
	</select>
	
	<insert id="addUser" parameterType="User">
		 <selectKey keyProperty="no" resultType="int" order="BEFORE">
			select users_seq.nextval  from dual
		</selectKey>
		insert into users
		(user_no, user_id, user_password, user_name, user_gender, user_birthday, user_nickname, user_available, user_grade, user_create_date, theme_no, user_last_access_date)
		values
		(${no}, #{id}, #{password}, #{name}, #{gender}, #{birthday}, #{nickname}, 'Y', 'M', sysdate, #{themeNo}, sysdate)
	</insert>
	
	<update id="updateUser" parameterType="User">
		update 
			users
		set
			user_password = #{password},
			user_name = #{name},
			user_gender = #{gender},
			user_birthday = #{birthday},
			user_nickname = #{nickname},
			user_available = #{available},
			user_grade = #{grade},
			theme_no = #{themeNo},
			user_last_access_date = #{lastAccessDate}
		where 
			user_no = #{no}
	</update>
	
	<select id="getUserByNo" parameterType="int" resultType="User">
		select
			a.user_no				as no,
			a.user_id				as id,
			a.user_password			as password,
			a.user_name				as name,
			a.user_gender			as gender,
			a.user_birthday			as birthday,
			a.user_nickname			as nickname,
			a.user_available		as available,
			a.user_grade			as grade,
			a.user_create_date		as createDate,
			a.theme_no				as themeNo,
			a.user_last_access_date	as lastAccessDate,
			b.theme_img				as "theme.img"
		from
			users a, theme b
		where 
			a.theme_no = b.theme_no
		and
			a.user_no = #{value}
	</select>
	
	

</mapper>
